/* DO NOT EDIT THIS FILE - it is machine generated */
#include "javavm/export/jni.h"
/* Header for class java/lang/Class */

#ifndef _CVM_JNI_java_lang_Class
#define _CVM_JNI_java_lang_Class
#undef java_lang_Class_serialVersionUID
#define java_lang_Class_serialVersionUID 3206093459760846163LL
#ifdef __cplusplus
extern "C"{
#endif
/*
 * Class:	java/lang/Class
 * Method:	forName0
 * Signature:	(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_Class_forName0
  (JNIEnv *, jclass, jstring, jboolean, jobject);

/*
 * Class:	java/lang/Class
 * Method:	isInstance
 * Signature:	(Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_isInstance
  (JNIEnv *, jobject, jobject);

/*
 * Class:	java/lang/Class
 * Method:	isAssignableFrom
 * Signature:	(Ljava/lang/Class;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_isAssignableFrom
  (JNIEnv *, jobject, jclass);

/*
 * Class:	java/lang/Class
 * Method:	isArray
 * Signature:	()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_isArray
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	isPrimitive
 * Signature:	()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_isPrimitive
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getName
 * Signature:	()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_lang_Class_getName
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getClassLoader0
 * Signature:	()Ljava/lang/ClassLoader;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Class_getClassLoader0
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getSuperclass
 * Signature:	()Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_Class_getSuperclass
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getInterfaces
 * Signature:	()[Ljava/lang/Class;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getInterfaces
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getComponentType
 * Signature:	()Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_Class_getComponentType
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getModifiers
 * Signature:	()I
 */
JNIEXPORT jint JNICALL Java_java_lang_Class_getModifiers
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getDeclaringClass
 * Signature:	()Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_Class_getDeclaringClass
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getProtectionDomain0
 * Signature:	()Ljava/security/ProtectionDomain;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Class_getProtectionDomain0
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getPrimitiveClass
 * Signature:	(Ljava/lang/String;)Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_java_lang_Class_getPrimitiveClass
  (JNIEnv *, jclass, jstring);

/*
 * Class:	java/lang/Class
 * Method:	getFields0
 * Signature:	(I)[Ljava/lang/reflect/Field;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getFields0
  (JNIEnv *, jobject, jint);

/*
 * Class:	java/lang/Class
 * Method:	getMethods0
 * Signature:	(I)[Ljava/lang/reflect/Method;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getMethods0
  (JNIEnv *, jobject, jint);

/*
 * Class:	java/lang/Class
 * Method:	getConstructors0
 * Signature:	(I)[Ljava/lang/reflect/Constructor;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getConstructors0
  (JNIEnv *, jobject, jint);

/*
 * Class:	java/lang/Class
 * Method:	getField0
 * Signature:	(Ljava/lang/String;I)Ljava/lang/reflect/Field;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Class_getField0
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:	java/lang/Class
 * Method:	getMethod0
 * Signature:	(Ljava/lang/String;[Ljava/lang/Class;I)Ljava/lang/reflect/Method;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Class_getMethod0
  (JNIEnv *, jobject, jstring, jobjectArray, jint);

/*
 * Class:	java/lang/Class
 * Method:	getConstructor0
 * Signature:	([Ljava/lang/Class;I)Ljava/lang/reflect/Constructor;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Class_getConstructor0
  (JNIEnv *, jobject, jobjectArray, jint);

/*
 * Class:	java/lang/Class
 * Method:	getDeclaredClasses0
 * Signature:	()[Ljava/lang/Class;
 */
JNIEXPORT jobjectArray JNICALL Java_java_lang_Class_getDeclaredClasses0
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	desiredAssertionStatus0
 * Signature:	(Ljava/lang/Class;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_desiredAssertionStatus0
  (JNIEnv *, jclass, jclass);

/*
 * Class:	java/lang/Class
 * Method:	checkInitializedFlag
 * Signature:	()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_checkInitializedFlag
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	checkInitializingFlag
 * Signature:	(Z)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_checkInitializingFlag
  (JNIEnv *, jobject, jboolean);

/*
 * Class:	java/lang/Class
 * Method:	checkErrorFlag
 * Signature:	()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_checkErrorFlag
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	setInitializedFlag
 * Signature:	()V
 */
JNIEXPORT void JNICALL Java_java_lang_Class_setInitializedFlag
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	setInitializingFlag
 * Signature:	()V
 */
JNIEXPORT void JNICALL Java_java_lang_Class_setInitializingFlag
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	setErrorFlag
 * Signature:	()V
 */
JNIEXPORT void JNICALL Java_java_lang_Class_setErrorFlag
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	clearInitializingFlag
 * Signature:	()V
 */
JNIEXPORT void JNICALL Java_java_lang_Class_clearInitializingFlag
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	clearSuperClassesLoadedFlag
 * Signature:	()V
 */
JNIEXPORT void JNICALL Java_java_lang_Class_clearSuperClassesLoadedFlag
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	addToLoaderCache
 * Signature:	(Ljava/lang/ClassLoader;)V
 */
JNIEXPORT void JNICALL Java_java_lang_Class_addToLoaderCache
  (JNIEnv *, jobject, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getClassTypeID
 * Signature:	()I
 */
JNIEXPORT jint JNICALL Java_java_lang_Class_getClassTypeID
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	superClassesLoaded
 * Signature:	()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Class_superClassesLoaded
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getSuperClassTypeID
 * Signature:	()I
 */
JNIEXPORT jint JNICALL Java_java_lang_Class_getSuperClassTypeID
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getSuperClassName
 * Signature:	(Ljava/lang/ClassLoader;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_lang_Class_getSuperClassName
  (JNIEnv *, jobject, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getNumInterfaces
 * Signature:	()I
 */
JNIEXPORT jint JNICALL Java_java_lang_Class_getNumInterfaces
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	getInterfaceTypeID
 * Signature:	(I)I
 */
JNIEXPORT jint JNICALL Java_java_lang_Class_getInterfaceTypeID
  (JNIEnv *, jobject, jint);

/*
 * Class:	java/lang/Class
 * Method:	getInterfaceName
 * Signature:	(ILjava/lang/ClassLoader;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_lang_Class_getInterfaceName
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:	java/lang/Class
 * Method:	linkSuperClasses
 * Signature:	()V
 */
JNIEXPORT void JNICALL Java_java_lang_Class_linkSuperClasses
  (JNIEnv *, jobject);

/*
 * Class:	java/lang/Class
 * Method:	notifyClassLoaded
 * Signature:	()V
 */
JNIEXPORT void JNICALL Java_java_lang_Class_notifyClassLoaded
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
